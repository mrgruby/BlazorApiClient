@page "/Base64Converter"

<h3>Base64Converter</h3>

<div class="form-group">
    <textarea class="form-control col-md-6" placeholder="Non Base64" @bind-value="NonBase64Body" @bind-value:event="oninput"></textarea>
    <small class="text-black-50 text-muted">This is the value you want to encode as Base64</small>
</div>

<button class="btn btn-primary" type="button" @onclick="ConvertToBase64">
    <span class="oi oi-arrow-thick-bottom"> Encode</span>
</button>

<button class="btn btn-success" type="button" @onclick="ConvertFromBase64">
    <span class="oi oi-arrow-thick-top"> Decode</span>
</button>

<div class="form-group" style="margin-top:20px">
    <textarea class="form-control col-md-6" placeholder="Base64" @bind-value="Base64Body" @bind-value:event="oninput"></textarea>
    <small class="text-black-50 text-muted">This is the value you want to encode from Base64</small>
</div>

@code {
    public string NonBase64Body { get; set; }
    public string Base64Body { get; set; }

    private void ConvertToBase64()
    {
        try
        {
            var plaintTextByte = Encoding.UTF8.GetBytes(NonBase64Body);
            Base64Body = Convert.ToBase64String(plaintTextByte);
        }
        catch (ArgumentNullException e)
        {
            Console.Write($"Can't convert to nothing! {e}");
        }
    }

    private void ConvertFromBase64()
    {
        try
        {
            var base64EncodedBytes = Convert.FromBase64String(Base64Body);
            NonBase64Body = Encoding.UTF8.GetString(base64EncodedBytes);
        }
        catch (ArgumentNullException e)
        {
            Console.Write($"Can't convert from nothing! {e}");
        }

    }
}
